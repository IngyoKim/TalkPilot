// Mocks generated by Mockito 5.4.6 from annotations
// in talk_pilot/test/services/auth/kakao_login_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;

import 'package:firebase_auth/firebase_auth.dart' as _i12;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i11;
import 'package:firebase_core/firebase_core.dart' as _i10;
import 'package:kakao_flutter_sdk_auth/kakao_flutter_sdk_auth.dart' as _i2;
import 'package:kakao_flutter_sdk_user/src/model/access_token_info.dart' as _i5;
import 'package:kakao_flutter_sdk_user/src/model/account.dart' as _i15;
import 'package:kakao_flutter_sdk_user/src/model/profile.dart' as _i16;
import 'package:kakao_flutter_sdk_user/src/model/scope_info.dart' as _i9;
import 'package:kakao_flutter_sdk_user/src/model/user.dart' as _i3;
import 'package:kakao_flutter_sdk_user/src/model/user_id_response.dart' as _i4;
import 'package:kakao_flutter_sdk_user/src/model/user_revoked_service_terms.dart'
    as _i8;
import 'package:kakao_flutter_sdk_user/src/model/user_service_terms.dart'
    as _i7;
import 'package:kakao_flutter_sdk_user/src/model/user_shipping_addresses.dart'
    as _i6;
import 'package:kakao_flutter_sdk_user/src/user_api.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:talk_pilot/src/services/auth/custom_token_service.dart' as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOAuthToken_0 extends _i1.SmartFake implements _i2.OAuthToken {
  _FakeOAuthToken_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserIdResponse_2 extends _i1.SmartFake
    implements _i4.UserIdResponse {
  _FakeUserIdResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccessTokenInfo_3 extends _i1.SmartFake
    implements _i5.AccessTokenInfo {
  _FakeAccessTokenInfo_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserShippingAddresses_4 extends _i1.SmartFake
    implements _i6.UserShippingAddresses {
  _FakeUserShippingAddresses_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserServiceTerms_5 extends _i1.SmartFake
    implements _i7.UserServiceTerms {
  _FakeUserServiceTerms_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserRevokedServiceTerms_6 extends _i1.SmartFake
    implements _i8.UserRevokedServiceTerms {
  _FakeUserRevokedServiceTerms_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScopeInfo_7 extends _i1.SmartFake implements _i9.ScopeInfo {
  _FakeScopeInfo_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_8 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_9 extends _i1.SmartFake implements _i10.FirebaseApp {
  _FakeFirebaseApp_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_10 extends _i1.SmartFake
    implements _i11.ActionCodeInfo {
  _FakeActionCodeInfo_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_11 extends _i1.SmartFake
    implements _i12.UserCredential {
  _FakeUserCredential_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_12 extends _i1.SmartFake
    implements _i12.ConfirmationResult {
  _FakeConfirmationResult_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_13 extends _i1.SmartFake implements _i11.UserMetadata {
  _FakeUserMetadata_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_14 extends _i1.SmartFake implements _i12.MultiFactor {
  _FakeMultiFactor_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_15 extends _i1.SmartFake
    implements _i11.IdTokenResult {
  _FakeIdTokenResult_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_16 extends _i1.SmartFake implements _i12.User {
  _FakeUser_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserApi extends _i1.Mock implements _i13.UserApi {
  MockUserApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i2.OAuthToken> loginWithKakaoTalk({
    List<String>? channelPublicIds,
    List<String>? serviceTerms,
    String? nonce,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loginWithKakaoTalk, [], {
              #channelPublicIds: channelPublicIds,
              #serviceTerms: serviceTerms,
              #nonce: nonce,
            }),
            returnValue: _i14.Future<_i2.OAuthToken>.value(
              _FakeOAuthToken_0(
                this,
                Invocation.method(#loginWithKakaoTalk, [], {
                  #channelPublicIds: channelPublicIds,
                  #serviceTerms: serviceTerms,
                  #nonce: nonce,
                }),
              ),
            ),
          )
          as _i14.Future<_i2.OAuthToken>);

  @override
  _i14.Future<_i2.OAuthToken> loginWithKakaoAccount({
    List<_i2.Prompt>? prompts,
    List<String>? channelPublicIds,
    List<String>? serviceTerms,
    String? loginHint,
    String? nonce,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loginWithKakaoAccount, [], {
              #prompts: prompts,
              #channelPublicIds: channelPublicIds,
              #serviceTerms: serviceTerms,
              #loginHint: loginHint,
              #nonce: nonce,
            }),
            returnValue: _i14.Future<_i2.OAuthToken>.value(
              _FakeOAuthToken_0(
                this,
                Invocation.method(#loginWithKakaoAccount, [], {
                  #prompts: prompts,
                  #channelPublicIds: channelPublicIds,
                  #serviceTerms: serviceTerms,
                  #loginHint: loginHint,
                  #nonce: nonce,
                }),
              ),
            ),
          )
          as _i14.Future<_i2.OAuthToken>);

  @override
  _i14.Future<_i2.OAuthToken> loginWithNewScopes(
    List<String>? scopes, {
    String? nonce,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loginWithNewScopes, [scopes], {#nonce: nonce}),
            returnValue: _i14.Future<_i2.OAuthToken>.value(
              _FakeOAuthToken_0(
                this,
                Invocation.method(
                  #loginWithNewScopes,
                  [scopes],
                  {#nonce: nonce},
                ),
              ),
            ),
          )
          as _i14.Future<_i2.OAuthToken>);

  @override
  _i14.Future<_i3.User> me({
    List<String>? properties,
    bool? secureResource = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#me, [], {
              #properties: properties,
              #secureResource: secureResource,
            }),
            returnValue: _i14.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#me, [], {
                  #properties: properties,
                  #secureResource: secureResource,
                }),
              ),
            ),
          )
          as _i14.Future<_i3.User>);

  @override
  _i14.Future<_i4.UserIdResponse> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i14.Future<_i4.UserIdResponse>.value(
              _FakeUserIdResponse_2(this, Invocation.method(#logout, [])),
            ),
          )
          as _i14.Future<_i4.UserIdResponse>);

  @override
  _i14.Future<_i4.UserIdResponse> unlink() =>
      (super.noSuchMethod(
            Invocation.method(#unlink, []),
            returnValue: _i14.Future<_i4.UserIdResponse>.value(
              _FakeUserIdResponse_2(this, Invocation.method(#unlink, [])),
            ),
          )
          as _i14.Future<_i4.UserIdResponse>);

  @override
  _i14.Future<_i5.AccessTokenInfo> accessTokenInfo() =>
      (super.noSuchMethod(
            Invocation.method(#accessTokenInfo, []),
            returnValue: _i14.Future<_i5.AccessTokenInfo>.value(
              _FakeAccessTokenInfo_3(
                this,
                Invocation.method(#accessTokenInfo, []),
              ),
            ),
          )
          as _i14.Future<_i5.AccessTokenInfo>);

  @override
  _i14.Future<int> selectShippingAddress({
    bool? mobileView,
    bool? enableBackButton,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectShippingAddress, [], {
              #mobileView: mobileView,
              #enableBackButton: enableBackButton,
            }),
            returnValue: _i14.Future<int>.value(0),
          )
          as _i14.Future<int>);

  @override
  _i14.Future<_i6.UserShippingAddresses> shippingAddresses({
    int? addressId,
    DateTime? fromUpdatedAt,
    int? pageSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#shippingAddresses, [], {
              #addressId: addressId,
              #fromUpdatedAt: fromUpdatedAt,
              #pageSize: pageSize,
            }),
            returnValue: _i14.Future<_i6.UserShippingAddresses>.value(
              _FakeUserShippingAddresses_4(
                this,
                Invocation.method(#shippingAddresses, [], {
                  #addressId: addressId,
                  #fromUpdatedAt: fromUpdatedAt,
                  #pageSize: pageSize,
                }),
              ),
            ),
          )
          as _i14.Future<_i6.UserShippingAddresses>);

  @override
  _i14.Future<_i7.UserServiceTerms> serviceTerms({
    List<String>? tags,
    String? result,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#serviceTerms, [], {
              #tags: tags,
              #result: result,
            }),
            returnValue: _i14.Future<_i7.UserServiceTerms>.value(
              _FakeUserServiceTerms_5(
                this,
                Invocation.method(#serviceTerms, [], {
                  #tags: tags,
                  #result: result,
                }),
              ),
            ),
          )
          as _i14.Future<_i7.UserServiceTerms>);

  @override
  _i14.Future<_i8.UserRevokedServiceTerms> revokeServiceTerms({
    required List<String>? tags,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#revokeServiceTerms, [], {#tags: tags}),
            returnValue: _i14.Future<_i8.UserRevokedServiceTerms>.value(
              _FakeUserRevokedServiceTerms_6(
                this,
                Invocation.method(#revokeServiceTerms, [], {#tags: tags}),
              ),
            ),
          )
          as _i14.Future<_i8.UserRevokedServiceTerms>);

  @override
  _i14.Future<void> updateProfile(Map<String, String>? properties) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [properties]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> signup({Map<String, String>? properties}) =>
      (super.noSuchMethod(
            Invocation.method(#signup, [], {#properties: properties}),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i9.ScopeInfo> scopes({List<String>? scopes}) =>
      (super.noSuchMethod(
            Invocation.method(#scopes, [], {#scopes: scopes}),
            returnValue: _i14.Future<_i9.ScopeInfo>.value(
              _FakeScopeInfo_7(
                this,
                Invocation.method(#scopes, [], {#scopes: scopes}),
              ),
            ),
          )
          as _i14.Future<_i9.ScopeInfo>);

  @override
  _i14.Future<_i9.ScopeInfo> revokeScopes({required List<String>? scopes}) =>
      (super.noSuchMethod(
            Invocation.method(#revokeScopes, [], {#scopes: scopes}),
            returnValue: _i14.Future<_i9.ScopeInfo>.value(
              _FakeScopeInfo_7(
                this,
                Invocation.method(#revokeScopes, [], {#scopes: scopes}),
              ),
            ),
          )
          as _i14.Future<_i9.ScopeInfo>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockKakaoUser extends _i1.Mock implements _i3.User {
  MockKakaoUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);

  @override
  set id(int? _id) => super.noSuchMethod(
    Invocation.setter(#id, _id),
    returnValueForMissingStub: null,
  );

  @override
  set properties(Map<String, String>? _properties) => super.noSuchMethod(
    Invocation.setter(#properties, _properties),
    returnValueForMissingStub: null,
  );

  @override
  set kakaoAccount(_i15.Account? _kakaoAccount) => super.noSuchMethod(
    Invocation.setter(#kakaoAccount, _kakaoAccount),
    returnValueForMissingStub: null,
  );

  @override
  set groupUserToken(String? _groupUserToken) => super.noSuchMethod(
    Invocation.setter(#groupUserToken, _groupUserToken),
    returnValueForMissingStub: null,
  );

  @override
  set connectedAt(DateTime? _connectedAt) => super.noSuchMethod(
    Invocation.setter(#connectedAt, _connectedAt),
    returnValueForMissingStub: null,
  );

  @override
  set synchedAt(DateTime? _synchedAt) => super.noSuchMethod(
    Invocation.setter(#synchedAt, _synchedAt),
    returnValueForMissingStub: null,
  );

  @override
  set hasSignedUp(bool? _hasSignedUp) => super.noSuchMethod(
    Invocation.setter(#hasSignedUp, _hasSignedUp),
    returnValueForMissingStub: null,
  );

  @override
  set uuid(String? _uuid) => super.noSuchMethod(
    Invocation.setter(#uuid, _uuid),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Account].
///
/// See the documentation for Mockito's code generation for more information.
class MockKakaoAccount extends _i1.Mock implements _i15.Account {
  MockKakaoAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set profileNeedsAgreement(bool? _profileNeedsAgreement) => super.noSuchMethod(
    Invocation.setter(#profileNeedsAgreement, _profileNeedsAgreement),
    returnValueForMissingStub: null,
  );

  @override
  set profileNicknameNeedsAgreement(bool? _profileNicknameNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(
          #profileNicknameNeedsAgreement,
          _profileNicknameNeedsAgreement,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set profileImageNeedsAgreement(bool? _profileImageNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(
          #profileImageNeedsAgreement,
          _profileImageNeedsAgreement,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set profile(_i16.Profile? _profile) => super.noSuchMethod(
    Invocation.setter(#profile, _profile),
    returnValueForMissingStub: null,
  );

  @override
  set nameNeedsAgreement(bool? _nameNeedsAgreement) => super.noSuchMethod(
    Invocation.setter(#nameNeedsAgreement, _nameNeedsAgreement),
    returnValueForMissingStub: null,
  );

  @override
  set name(String? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  set emailNeedsAgreement(bool? _emailNeedsAgreement) => super.noSuchMethod(
    Invocation.setter(#emailNeedsAgreement, _emailNeedsAgreement),
    returnValueForMissingStub: null,
  );

  @override
  set isEmailValid(bool? _isEmailValid) => super.noSuchMethod(
    Invocation.setter(#isEmailValid, _isEmailValid),
    returnValueForMissingStub: null,
  );

  @override
  set isEmailVerified(bool? _isEmailVerified) => super.noSuchMethod(
    Invocation.setter(#isEmailVerified, _isEmailVerified),
    returnValueForMissingStub: null,
  );

  @override
  set email(String? _email) => super.noSuchMethod(
    Invocation.setter(#email, _email),
    returnValueForMissingStub: null,
  );

  @override
  set ageRangeNeedsAgreement(bool? _ageRangeNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(#ageRangeNeedsAgreement, _ageRangeNeedsAgreement),
        returnValueForMissingStub: null,
      );

  @override
  set ageRange(_i15.AgeRange? _ageRange) => super.noSuchMethod(
    Invocation.setter(#ageRange, _ageRange),
    returnValueForMissingStub: null,
  );

  @override
  set birthyearNeedsAgreement(bool? _birthyearNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(#birthyearNeedsAgreement, _birthyearNeedsAgreement),
        returnValueForMissingStub: null,
      );

  @override
  set birthyear(String? _birthyear) => super.noSuchMethod(
    Invocation.setter(#birthyear, _birthyear),
    returnValueForMissingStub: null,
  );

  @override
  set birthdayNeedsAgreement(bool? _birthdayNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(#birthdayNeedsAgreement, _birthdayNeedsAgreement),
        returnValueForMissingStub: null,
      );

  @override
  set birthday(String? _birthday) => super.noSuchMethod(
    Invocation.setter(#birthday, _birthday),
    returnValueForMissingStub: null,
  );

  @override
  set birthdayType(_i15.BirthdayType? _birthdayType) => super.noSuchMethod(
    Invocation.setter(#birthdayType, _birthdayType),
    returnValueForMissingStub: null,
  );

  @override
  set isLeapMonth(bool? _isLeapMonth) => super.noSuchMethod(
    Invocation.setter(#isLeapMonth, _isLeapMonth),
    returnValueForMissingStub: null,
  );

  @override
  set genderNeedsAgreement(bool? _genderNeedsAgreement) => super.noSuchMethod(
    Invocation.setter(#genderNeedsAgreement, _genderNeedsAgreement),
    returnValueForMissingStub: null,
  );

  @override
  set gender(_i15.Gender? _gender) => super.noSuchMethod(
    Invocation.setter(#gender, _gender),
    returnValueForMissingStub: null,
  );

  @override
  set legalNameNeedsAgreement(bool? _legalNameNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(#legalNameNeedsAgreement, _legalNameNeedsAgreement),
        returnValueForMissingStub: null,
      );

  @override
  set legalName(String? _legalName) => super.noSuchMethod(
    Invocation.setter(#legalName, _legalName),
    returnValueForMissingStub: null,
  );

  @override
  set legalBirthDateNeedsAgreement(bool? _legalBirthDateNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(
          #legalBirthDateNeedsAgreement,
          _legalBirthDateNeedsAgreement,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set legalBirthDate(String? _legalBirthDate) => super.noSuchMethod(
    Invocation.setter(#legalBirthDate, _legalBirthDate),
    returnValueForMissingStub: null,
  );

  @override
  set legalGenderNeedsAgreement(bool? _legalGenderNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(
          #legalGenderNeedsAgreement,
          _legalGenderNeedsAgreement,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set legalGender(_i15.Gender? _legalGender) => super.noSuchMethod(
    Invocation.setter(#legalGender, _legalGender),
    returnValueForMissingStub: null,
  );

  @override
  set phoneNumberNeedsAgreement(bool? _phoneNumberNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(
          #phoneNumberNeedsAgreement,
          _phoneNumberNeedsAgreement,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set phoneNumber(String? _phoneNumber) => super.noSuchMethod(
    Invocation.setter(#phoneNumber, _phoneNumber),
    returnValueForMissingStub: null,
  );

  @override
  set isKoreanNeedsAgreement(bool? _isKoreanNeedsAgreement) =>
      super.noSuchMethod(
        Invocation.setter(#isKoreanNeedsAgreement, _isKoreanNeedsAgreement),
        returnValueForMissingStub: null,
      );

  @override
  set isKorean(bool? _isKorean) => super.noSuchMethod(
    Invocation.setter(#isKorean, _isKorean),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Profile].
///
/// See the documentation for Mockito's code generation for more information.
class MockKakaoProfile extends _i1.Mock implements _i16.Profile {
  MockKakaoProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [OAuthToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockOAuthToken extends _i1.Mock implements _i2.OAuthToken {
  MockOAuthToken() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get accessToken =>
      (super.noSuchMethod(
            Invocation.getter(#accessToken),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#accessToken),
            ),
          )
          as String);

  @override
  DateTime get expiresAt =>
      (super.noSuchMethod(
            Invocation.getter(#expiresAt),
            returnValue: _FakeDateTime_8(this, Invocation.getter(#expiresAt)),
          )
          as DateTime);

  @override
  set accessToken(String? _accessToken) => super.noSuchMethod(
    Invocation.setter(#accessToken, _accessToken),
    returnValueForMissingStub: null,
  );

  @override
  set expiresAt(DateTime? _expiresAt) => super.noSuchMethod(
    Invocation.setter(#expiresAt, _expiresAt),
    returnValueForMissingStub: null,
  );

  @override
  set refreshToken(String? _refreshToken) => super.noSuchMethod(
    Invocation.setter(#refreshToken, _refreshToken),
    returnValueForMissingStub: null,
  );

  @override
  set refreshTokenExpiresAt(DateTime? _refreshTokenExpiresAt) =>
      super.noSuchMethod(
        Invocation.setter(#refreshTokenExpiresAt, _refreshTokenExpiresAt),
        returnValueForMissingStub: null,
      );

  @override
  set scopes(List<String>? _scopes) => super.noSuchMethod(
    Invocation.setter(#scopes, _scopes),
    returnValueForMissingStub: null,
  );

  @override
  set idToken(String? _idToken) => super.noSuchMethod(
    Invocation.setter(#idToken, _idToken),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i12.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_9(this, Invocation.getter(#app)),
          )
          as _i10.FirebaseApp);

  @override
  set app(_i10.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i14.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i11.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i14.Future<_i11.ActionCodeInfo>.value(
              _FakeActionCodeInfo_10(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i14.Future<_i11.ActionCodeInfo>);

  @override
  _i14.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i12.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i14.Future<List<String>>.value(<String>[]),
          )
          as _i14.Future<List<String>>);

  @override
  _i14.Future<_i12.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i14.Stream<_i12.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i14.Stream<_i12.User?>.empty(),
          )
          as _i14.Stream<_i12.User?>);

  @override
  _i14.Stream<_i12.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i14.Stream<_i12.User?>.empty(),
          )
          as _i14.Stream<_i12.User?>);

  @override
  _i14.Stream<_i12.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i14.Stream<_i12.User?>.empty(),
          )
          as _i14.Stream<_i12.User?>);

  @override
  _i14.Future<void> sendPasswordResetEmail({
    required String? email,
    _i11.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i11.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setPersistence(_i11.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i12.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> signInWithCredential(
    _i11.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> signInWithProvider(
    _i11.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i12.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i14.Future<_i12.ConfirmationResult>.value(
              _FakeConfirmationResult_12(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i14.Future<_i12.ConfirmationResult>);

  @override
  _i14.Future<_i12.UserCredential> signInWithPopup(
    _i11.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<void> signInWithRedirect(_i11.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i14.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i14.Future<String>);

  @override
  _i14.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i11.PhoneMultiFactorInfo? multiFactorInfo,
    required _i11.PhoneVerificationCompleted? verificationCompleted,
    required _i11.PhoneVerificationFailed? verificationFailed,
    required _i11.PhoneCodeSent? codeSent,
    required _i11.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i11.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i12.UserCredential {
  MockUserCredential() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseUser extends _i1.Mock implements _i12.User {
  MockFirebaseUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i11.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_13(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i11.UserMetadata);

  @override
  List<_i11.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i11.UserInfo>[],
          )
          as List<_i11.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i17.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i12.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_14(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i12.MultiFactor);

  @override
  _i14.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i14.Future<String?>.value(),
          )
          as _i14.Future<String?>);

  @override
  _i14.Future<_i11.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i14.Future<_i11.IdTokenResult>.value(
              _FakeIdTokenResult_15(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i14.Future<_i11.IdTokenResult>);

  @override
  _i14.Future<_i12.UserCredential> linkWithCredential(
    _i11.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> linkWithProvider(
    _i11.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> reauthenticateWithProvider(
    _i11.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<_i12.UserCredential> reauthenticateWithPopup(
    _i11.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<void> reauthenticateWithRedirect(_i11.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i12.UserCredential> linkWithPopup(_i11.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<void> linkWithRedirect(_i11.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i12.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i12.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i14.Future<_i12.ConfirmationResult>.value(
              _FakeConfirmationResult_12(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i14.Future<_i12.ConfirmationResult>);

  @override
  _i14.Future<_i12.UserCredential> reauthenticateWithCredential(
    _i11.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i14.Future<_i12.UserCredential>.value(
              _FakeUserCredential_11(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i14.Future<_i12.UserCredential>);

  @override
  _i14.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> sendEmailVerification([
    _i11.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i12.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i14.Future<_i12.User>.value(
              _FakeUser_16(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i14.Future<_i12.User>);

  @override
  _i14.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updatePhoneNumber(
    _i11.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i11.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [CustomTokenService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomTokenService extends _i1.Mock
    implements _i18.CustomTokenService {
  MockCustomTokenService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i17.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  _i14.Future<String> createCustomToken(Map<String, dynamic>? user) =>
      (super.noSuchMethod(
            Invocation.method(#createCustomToken, [user]),
            returnValue: _i14.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#createCustomToken, [user]),
              ),
            ),
          )
          as _i14.Future<String>);
}
